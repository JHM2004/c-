//#include<iostream>
//using namespace std;
////重排数组中元素,使相同数据在一起,并保持他们原来在数组中第一次出现的相对次序:
//const int N = 12;
//int main()
//{
//	int a[N] = { 8, 5, 8, 2, 8, 3, 5, 2, 8, 3, 5, 1 };
//	int b[N], c[N];
//	int i, j, k=-1, t;
//	for (i = 0; i < N; i++)b[i] = c[i] = 1;
//	for (i = 0; i < N; i++)
//		if (b[i] == 1)
//		{
//			a[++k] = a[i];
//			for (j = i + 1; j < N; j++)
//			{
//				if (a[j] == a[k])
//				{
//					b[j] = 0;
//					c[k]++;
//				}
//			}
//		}
//	t = N - 1;
//	for (i = k; i >= 0; i--)
//	{
//		for (j = 1; j <= c[i]; j++)
//		{
//			a[t--] = a[i];
//		}
//	}
//	for (i = 0; i < N; i++)
//	{
//		cout << a[i] << " ";
//	}
//	cout << endl;
//			return 0;
//}

//=======================================================
//chatgpt写注释:
// 
//这是一个C++程序
#include<iostream> //包含输入输出流头文件
using namespace std; //使用标准命名空间

const int N = 12; //常量N为数组的大小

int main() //主函数开始
{
    int a[N] = { 8, 5, 8, 2, 8, 3, 5, 2, 8, 3, 5, 1 };  //定义并初始化整型数组a
    int b[N], c[N]; //定义两个长度为N的整型数组b和c
    int i, j, k = -1, t; //定义四个整型变量i、j、k、t并初始化其中的k为-1

    for (i = 0; i < N; i++)  //初始化数组b和c，将它们的元素都设为1 
        b[i] = c[i] = 1;

    for (i = 0; i < N; i++) //遍历数组a
        if (b[i] == 1) //如果该值在之前未被访问到过（即b[i]=1）
        {
            a[++k] = a[i]; //将新的值加入到a[k+1]中
            for (j = i + 1; j < N; j++) //再次遍历a数组
            {
                if (a[j] == a[k]) //如果有与a[k]相同的值
                {
                    b[j] = 0; //设置对应的b[j]的值为0，表示这个值已经访问到过   
                    c[k]++; //同时更新c[k]表示该值已经出现过的次数
                }
            }
        }

    t = N - 1; //t为倒数第一位

    for (i = k; i >= 0; i--) //从后往前遍历数组a，将相同的值归类到一起 
    {
        for (j = 1; j <= c[i]; j++) //遍历c[i]次
        {
            a[t--] = a[i]; //将a[i]填充到a数组的最后面
        }
    }

    for (i = 0; i < N; i++) //遍历a数组并输出结果
    {
        cout << a[i] << " "; //输出a[i]和空格
    }

    cout << endl;  //换行
    return 0; //程序结束，返回0表示正常退出
}