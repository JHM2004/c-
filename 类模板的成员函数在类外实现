//泛型编程(类模板)
//类模板的成员函数在类外实现:
#include<iostream>
using namespace std;
template<class T1,class T2>
class A
{
	T1 a;
	T2 b;
public:
	A() {}
	A(T1 a, T2 b);
	void Print(void);
};
template<class T1,class T2>
A<T1, T2>::A(T1 a , T2 b)
{
	this->a = a;
	this->b = b;
}
template<class T1, class T2>
void A<T1, T2>::Print(void)
{
	cout << a << ' ' << b << endl;
}
int main()
{
	//类模板实例化对象不会自动推导实参类型
	A<int, int>x(10, 20);
	x.Print();
	A<int, char>y(10, 'y');
	y.Print();
	return 0;
}