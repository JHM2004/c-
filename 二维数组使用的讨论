#include<iostream>
using namespace std;
void add1(int (*p)[3])
{
	//注:二维数组的元素地址连续
	cout << p << endl;
	cout <<*p << endl;           //注:行数组地址解引用是行的首元素地址
	cout <<**p << endl;
	cout << p[0]<<endl;  //arr 首行地址
	cout << p[1]<<endl;  //arr第2行地址
	cout << p[2]<<endl;  //arr第3行地址
	cout << *p[0] << endl; //arr首行首元素
	cout << *p[1] << endl; //arr第二行首元素
	cout << p[0][0]  << endl; //arr[0][0]
	cout << p[1][1]  << endl; //arr[1][1]
	return;
}

void add2(int p[])
{
	cout << p[0] << endl;  
	cout << p[1] << endl;  
	cout << p[2] << endl;  
	//错的:cout << p[2][2] << endl;
}

void add3(int* p)
{
	cout << p[0] << endl;
	cout << p[1] << endl;
	cout << p[2] << endl;
}
int main()
{		
	int arr[3][3] = { 1,2,3,
				      4,5,6,
					  7,8,9 };
	add1(arr);
	cout << "--------------------" << endl;
	add2(arr[0]);
	cout << "--------------------" << endl;
	add3(arr[0]);
	return 0;
}